#include<stdio.h>
#include<stdlib.h>

typedef struct PilhaLinear{
    int max;
    int n;
    int *array;
}PilhaLinear;

PilhaLinear* newPilhaLinear(int max){
    PilhaLinear *pilha = (PilhaLinear*)malloc(sizeof(PilhaLinear));
    pilha->max = max;
    pilha->n = 0;
    pilha->array = (int*)malloc(max*sizeof(int));
    return pilha;
} 

void delPilhaLinear(PilhaLinear* pilha){
    if(pilha != NULL){
        free(pilha->array);
        free(pilha);
    }
}

void empilhar(PilhaLinear* pilha, int elem){
    if(pilha->n >= pilha->max){
        printf("Erro!");
        return;
    }
    pilha->array[pilha->n++] = elem;
}

int desempilhar(PilhaLinear* pilha){
    if(pilha->n == 0){
        printf("Erro!");
        return -1;
    }
    pilha->n--;
    int x = pilha->array[pilha->n];
    return x; 
}

void mostrar(PilhaLinear *pilha){
    printf("[");
    for(int i = pilha->n; i > 0; i--){
        printf("%d", pilha->array[i-1]);
        if(i > 1){
            printf(", ");
        }
    }
    printf("]\n");
}

int pesquisar(PilhaLinear* pilha, int elem){
    for(int i = 0; i < pilha->n; i++){
        if(pilha->array[i] == elem){
            return 1;
        }
    }
    return 0;
}

int main(){
    PilhaLinear *pilha = newPilhaLinear(6);
    empilhar(pilha, 1);
    empilhar(pilha, 2);
    empilhar(pilha, 3);
    empilhar(pilha, 4);
    empilhar(pilha, 5);
    desempilhar(pilha);
    desempilhar(pilha);
    mostrar(pilha);
    int result = pesquisar(pilha, 1);
    printf("O número 1 está na pilha: %d\n", result);
    delPilhaLinear(pilha);
    return 0;
}
